1   Pooling
    input = placeholder((N, C1, Ih, Iw, C0), name="input")
    input-ub = placeholder((N, C1, Kh, Kw, Oh, Ow, C0), name="input -ub")
    red_h = reduce_axis((0, Kh), "red_h") red_w = reduce_axis((0, Kw), "red_w") output = compute((N, C1, Oh, Ow, C0),
    lambda n, c1, h, w, c0: max(input -im2col[n, c1, red_h, red_w,  h, w, c0], axis=[red_h, red_w]))
2   Eltwise
3   InnerProduct 
4   Softmax
5   ReLU/LeakyReLU/RReLU 
6   Proposal
7   BatchNorm
8   ROIPooling
9   AbsVal
10  Bias
11  BNLL
12  Crop
13  Power
14  TanH
15  Reverse
16  Normalize 
17  PSROIPooling 
18  Permute
19  PRelu
20  PassThrough
21  scale
22  Convolution(DepthwiseConvï¼ŒConvolutionDepthwise)
23  Deconvolution 
24  ELU
25  Slice
26  Exp
27  Flatten
28  INPUT
29  ROIAlign
30  SSDDetectionOutput 
31  PriorBox
32  FSRDetectionOutput 
33  Reshape
34  Sigmoid
35  Concat
36  Upsample(darknet) 
37  Yolo
38  YoloV2DetectionOutput 
39  YoloV3DetectionOutput 
40  Log
41  LRN
42  MVN
43  Reduction
44  Split
45  SPP
46  Threshold
47  Tile
48  ShuffleChannel 
49  BatchedMatMul 
50  LSTM
51  ArgMax
52  RNN
53  Relu6
54  SpatialTransformer 
55  FlownetResample
56  DFMBPSROIAlign
57  RCNNProposal
58  RPNProposalSSD
59  Srelu
60  MDC_Correlation
61  DeconvolutionV1
62  Interp
63  PointPillarDecodeBox
64  ClassCal
65  PointPillarDetection
66  Yolov5FourInputDecodeBox
67  YoloNms
68  }
